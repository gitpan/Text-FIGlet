VRFY
	5.005, 5.6.0., 5.6.1, 5.8(ok)
		w/ & w/o unicode
		chr(0x13d) on pre 5.6?! (skip test, or fake up...)

	grep for XXX

	Test::Differences dependency?

	patch-1.07-2.00
	PRIVs?

	negative character codes, test -C mapping them in

CAVEAT
XXX	may break, depending on Text::Wrap?

-m -0
	a) keep current hack on hack

	b) use header width
-m -1
	my kern is by rectangles, not edges :-/ so W<=> in World is munged

General
	- zipped font support?
	- smushing (-m=1|2|4|8|16|32)
	- controls; h j b g
		- isn't u enough?
	- "Vertical Fitting"?
	- other scripts: chkfont
	- Text::FIGlet::Mixed, for creating the anti-spambot style text
		- mixed({
			-f=>Text::FIGlet->new, #Font Object
			-A=>'H',               #Input
			pre=> CODREF,          #Control object, etc.
			post=>CODEREF,         #eg; y/x/*/
			} ... );
Control
	literal needs to use $RE{UTFchar}
		$opts{-U} = 1 if /^\s*/
		$opts{-U} ? UTFchar : bytechar

	if pre 5.6 ignore char > 0xFF and use \x.. syntax?!
		switch to an OR'd s (for > 0xff)?

	cannot support unicode literals...?
		at all (#$#@, could translate to \x{} notation)

		just pre 5.6 (could translate to s///)

Refactor
	VRFY, is hichar/lochar needed?
		need something similar for negative->10 transition?

	Benchmark
		$font alias again

		1.07 vs. 1.06

		dprof

	try _font = {}
		no hack for negative indices

		no lochar/hichar hack

		use hex as key, for wider space?

	char =[] can get blank chars to not be ref's?!

	reduce reliance upon $/
		ammend split expression?

charmapl.pl
	missing unicodes? negatives!

	Text::Wrap in 5.6 is broken :-P so >0xff are wrapped

	need lochar/hichar?
