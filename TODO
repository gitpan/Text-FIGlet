FIX
	wide character warnings in figlet/minifig/charmap if native
	     support hack for proper wrapping

	premature wrapping of widechar glyph fragments...
	     relatively simple in modern perl, but not older

?	charmap for widechar/TOIlet fonts

??	TOIlet permits widechars as EOL!

	charmapl.pl
		Text::Wrap in 5.6 is broken :-P so >0xff are wrapped

	Control
		literal needs to use $RE{UTFchar}
			$opts{-U} = 1 if /^\s*/
			$opts{-U} ? UTFchar : bytechar

		if pre 5.6 ignore char > 0xFF and use \x.. syntax?!
			switch to s alternation (for > 0xff)?

	XXX	cannot support unicode literals...?
			at all (#$#@, could translate to \x{} notation)

			just pre 5.6 (could translate to s///)
VRFY
	grep for XXX, "patches"

TEST
	-U=0, -U=-1

REFACTOR
	Switch to ::AnyInflate?

	Benchmark
		$font alias again

		1.07 vs. 1.06

		dprof

        Negative Char performance
		 Pre-allocating length halves size of array,
		 req. scan file for - 1st, seek/read backwards? iff -U
		     (assumes sane file order, but is okay for optimization?)

		 Hash(collision performance hit)?

		 2nd array(code complexity?)?

	char =[] can get blank chars to not be ref's?!

	detect if glyph has been seen before, and reference it?
	       potential over-smushification problem

	reduce reliance upon $/
		ammend split expression?

        Native UTF8 in 5.8+?

	-m=-0
	a) keep current hack on hack
	b) use header width

	may break, depending on Text::Wrap?

	use header[3] as initial approximation of char width,
	to help nix up-to 0x7e heuristic

FEATURES
	- smushing (-m=1|2|4|8|16|32)
	  TOIlet -o/verlap mode? (partial lamination of each FIGchar)
          Would have to know what chars are "inside" the top letter for opacity
	- "Vertical Fitting"?

	- Text::FIGlet::Mixed, for creating the anti-spambot style text
		- mixed({
			-f=>Text::FIGlet->new, #Font Object
			-A=>'H',               #Input
			pre=> CODREF,          #Control object, etc.
			post=>CODEREF,         #eg; y/x/*/
			} ... );
	- add noise for "captcha"

	- controls; h j b g
		- isn't u enough?
	- other scripts: chkfont
